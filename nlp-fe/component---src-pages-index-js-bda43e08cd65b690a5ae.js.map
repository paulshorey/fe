{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["RootIndex","render","window","location","this","props","hostname","includes","search","React","Component"],"mappings":"4MA0BMA,E,gLACJC,OAAA,WACE,MAAsB,oBAAXC,OAEP,kBAAC,IAAD,CAAQC,SAAUC,KAAKC,MAAMF,WActBD,OAAOC,SAASG,SAASC,SAAS,cAAgBH,KAAKC,MAAMF,SAASK,OAAOD,SAAS,aAE7F,kBAAC,IAAD,CAAQJ,SAAUC,KAAKC,MAAMF,UAC3B,kBAAC,IAAD,CAAMA,SAAUC,KAAKC,MAAMF,YAK7B,kBAAC,IAAD,CAAQA,SAAUC,KAAKC,MAAMF,UAC3B,kBAAC,IAAD,CAASA,SAAUC,KAAKC,MAAMF,a,GA3BhBM,IAAMC,WAkCfV","file":"component---src-pages-index-js-bda43e08cd65b690a5ae.js","sourcesContent":["// import React from \"react\"\n// import Domain from \"src/pages/domain\"\n// import Word from \"src/pages/word\"\n// import Home from \"src/pages/home\"\n//\n// class RootIndex extends React.Component {\n//   render() {\n//     if (typeof window === \"undefined\") {\n//       return <Home location={this.props.location} />\n//     } else if (window.location.hostname.includes(\"thesaurus\") || this.props.location.search.includes(\"thesaurus\")) {\n//       return <Word location={this.props.location} />\n//     } else {\n//       return <Domain location={this.props.location} />\n//     }\n//   }\n// }\n//\n// export default RootIndex\n\n\nimport React from \"react\"\nimport Layout from \"../components/Page\"\nimport Domains from \"src/containers/Domains\"\nimport Word from \"src/containers/Word\"\nimport Search from \"../components/Search\"\n\nclass RootIndex extends React.Component {\n  render() {\n    if (typeof window === \"undefined\") {\n      return (\n        <Layout location={this.props.location}>\n          {/*<Search*/}\n          {/*  {...this.props}*/}\n          {/*  className={\"Search SearchHome\"}*/}\n          {/*  domains={false}*/}\n          {/*  title=\"\"*/}\n          {/*  placeholder=\"\"*/}\n          {/*  home={true}*/}\n          {/*  cue={[<div key=\"1\"> </div>]}*/}\n          {/*  loading={true}*/}\n          {/*/>*/}\n          {/*<p className=\"content\"> </p>*/}\n        </Layout>\n      )\n    } else if (window.location.hostname.includes(\"thesaurus\") || this.props.location.search.includes(\"thesaurus\")) {\n      return (\n        <Layout location={this.props.location}>\n          <Word location={this.props.location} />\n        </Layout>\n      )\n    } else {\n      return (\n        <Layout location={this.props.location}>\n          <Domains location={this.props.location} />\n        </Layout>\n      )\n    }\n  }\n}\n\nexport default RootIndex\n\n"],"sourceRoot":""}