{"version":3,"sources":["webpack:///./src/containers/Word/Field.js","webpack:///./src/containers/Word/Pos.js","webpack:///./src/containers/Word/FieldList.js","webpack:///./src/containers/Word/ViewWord.styled.js","webpack:///./src/containers/Word/ViewWordResults.js","webpack:///./src/containers/Word/ViewWordHome.js","webpack:///./src/containers/Word/ViewWord.js","webpack:///./src/containers/Word/index.js","webpack:///./src/pages/word.js","webpack:///./src/components/Hint.js","webpack:///./src/containers/Admin/EditDomain/DomExt.js","webpack:///./src/containers/Word/PosWord.js"],"names":["Field","render","this","props","row","field","undefined","label","value","className","style","maxWidth","React","Component","state","advanced","expand","pos","api_actions","slist_n","slist","word","dict","info","slist_shorter","pos_short","console","log","ListShorter","map","key","ListOk","Object","entries","tuple","filter","val","ListBad","ListProper","ListUnknown","length","pos_expand","marginBottom","onClick","setState","icon","faEllipsisH","Hint","faAngleUp","PosWord","to","Array","isArray","i","transform","Styled","styled","div","that","word_input","word_chunks","SearchAndHeader","Search","domains","title","placeholder","cue","faEdit","tlds","flat","best_of","all","str","pi","w","dom","DomExt","domext","pos1","pos2","home","ViewWord","ui_actions","RX__search_title","componentDidMount","input_actions","RX__search_thesaurus","componentDidUpdate","prevProps","a","search_now","ViewWordResults","ViewWordHome","connect","input","input_str","output","chunks","dispatch","bindActionCreators","RootIndex","location","Word","styles","display","lineHeight","fontSize","fontWeight","padding","margin","children","window","isLoading"],"mappings":"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","file":"component---src-pages-word-js-3d8fc2d660b137ba6b5c.js","sourcesContent":["import React from \"react\"\n\nclass Field extends React.Component {\n  render() {\n    // validate\n    let { row, field } = this.props\n    if (!row || typeof row[field] === undefined) {\n      return <p>No {field}</p>\n    }\n    // filter\n    let label = field\n    let value = row[field]\n    if (field === \"ws_sentiment\") {\n      label = \"sentiment\"\n      value = value >= 0 ? \"üëç\" : value === -1 ? \"üëé\" : \"undefined\"\n    }\n    // display\n    return (\n      <div className={\"ui-form-fieldset\"}>\n        <div className={\"label\"}>{label}</div>\n        <div className={\"value\"} style={{ maxWidth: 10000 }}>\n          {value}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Field\n","import React from \"react\"\nimport Hint from \"src/components/Hint\"\nimport PosWord from \"./PosWord\"\nimport { faAngleUp, faEllipsisH } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\n// import { asort_by_length_and_position } from 'universal-common-scripts/functions/asort_strings'\nimport pos_expand from \"data/words/function/pos_expand\"\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: props.expand || false\n    }\n  }\n\n  render() {\n    let { pos, row, api_actions } = this.props\n    /*\n     * validate\n     */\n    if (!pos) {\n      return null\n    }\n    /*\n     * slice of row.dict,\n     * with before/after\n     */\n    let slist_n = 0\n    let slist = {}\n    for (let word in row.dict) {\n      let info = row.dict[word]\n      // info[11] = bef/aft/ety\n      // info[9] = nou/ver/adj\n      // info[12] = must be real synonym, not derivation\n      if (pos === (info[11] || info[9]) && info[12]) {\n        slist[word] = info\n        slist_n++\n      }\n    }\n    if (!slist_n) {\n      return null\n    }\n    /*\n     * shortened preview\n     */\n    let slist_shorter = (row.pos_short && row.pos_short[pos]) || []\n    console.log(\"row\", row)\n    let ListShorter = slist_shorter.map((word) => <PosWord api_actions={api_actions} key={word} word={word} />)\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListOk = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[0] === 1 && info[1] === 0) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListBad = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[0] === 0 && info[1] === 0) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListProper = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[1] === 1) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListUnknown = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[2] === 1) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n\n    /*\n     *\n     * Render simple version:\n     *\n     */\n    if (!this.state.advanced && ListShorter.length) {\n      return (\n        <div className={\"ui-form-section simple\"}>\n          <div>\n            <div className={\"one\"}>\n              <b>{pos_expand(pos)}: </b>\n            </div>\n            <div className=\"two posWords\" style={{ marginBottom: 15 }}>\n              {ListShorter}\n            </div>\n            <div\n              className={\"three\"}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n              <FA icon={faEllipsisH} className=\"faEllipsisH\" />\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      /*\n       *\n       * Render advanced version:\n       *\n       */\n      if (!ListOk.length && !ListBad.length && !ListProper.length && !ListUnknown.length) {\n        return null\n      }\n      return (\n        <div className={\"ui-form-section advanced\"}>\n          <p className={\"one\"}>\n            <b className=\"title\">{pos_expand(pos)}:</b>\n          </p>\n\n          <div className={\"two\"}>\n            {ListShorter.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128512;</>}: </sub>*/}\n                <Hint className={\"color-accent opacity50\"}>Sorted by length:</Hint>\n                <span className=\"posWords opacity50\">{ListShorter}</span>\n              </p>\n            )}\n            {ListOk.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128512;</>}: </sub>*/}\n                <Hint className={\"color-accent opacity50\"}>Ok/Good:</Hint>\n                <span className=\"posWords\">{ListOk}</span>\n              </p>\n            )}\n            {ListBad.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128545;</>}: </sub>*/}\n                <Hint className={\"color-bad opacity50\"}>Negative:</Hint>\n                <span className=\"posWords\">{ListBad}</span>\n              </p>\n            )}\n            {ListProper.length > 0 && (\n              <p>\n                {/*<sub>{<>&#127963;</>}: </sub>*/}\n                <Hint className={\"color-light opacity75\"}>Proper:</Hint>\n                <span className=\"posWords\">{ListProper}</span>\n              </p>\n            )}\n            {ListUnknown.length > 0 && (\n              <p>\n                {/*<sub>{<>&#10067;</>}: </sub>*/}\n                <Hint className={\"color-light opacity75\"}>Unknown sentiment:</Hint>\n                <span className=\"posWords\">{ListUnknown}</span>\n              </p>\n            )}\n          </div>\n\n          <p\n            className={\"three\"}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n            <FA icon={faAngleUp} className=\"faAngleUp\" />\n          </p>\n        </div>\n      )\n    }\n  }\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { faEllipsisH, faAngleUp } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\n// import Hint from \"src/components/Hint\";\n\nconst PosWord = ({ word }) => (\n  <span className=\"posword\">\n    <Link to={`/word?str=${word}`}>{word}</Link>,\n  </span>\n)\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: false\n    }\n  }\n\n  render() {\n    let { field, row } = this.props\n    /*\n     * Validate\n     */\n    if (!field || !Array.isArray(row[field])) {\n      return null\n    }\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListOk = row[field]\n      .map((word, i) => {\n        return <PosWord word={word} key={word + i} />\n      })\n      .filter((val) => !!val)\n    /*\n     * Render simple version:\n     */\n    if (!this.state.advanced) {\n      return (\n        <div className={\"ui-form-section simple\"}>\n          <div>\n            {ListOk.length > 0 && (\n              <>\n                <div className={\"one\"}>\n                  <b>{field}: </b>\n                </div>\n                <div className=\"two fieldWords\">{ListOk}</div>\n              </>\n            )}\n            <div\n              className={\"three\"}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n              <FA icon={faEllipsisH} className=\"faEllipsisH\" style={{ transform: \"scale(0.85)\" }} />\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      /*\n       * Render advanced version:\n       */\n      return (\n        <div className={\"ui-form-section advanced\"}>\n          <p className={\"one\"}>\n            <b className=\"title\">{field}:</b>\n          </p>\n\n          <div className={\"two\"}>{ListOk.length > 0 && <p className=\"fieldWords\">{ListOk}</p>}</div>\n\n          <p\n            className={\"three\"}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n            <FA icon={faAngleUp} className=\"faAngleUp\" style={{ transform: \"scale(0.85)\" }} />\n          </p>\n        </div>\n      )\n    }\n  }\n}\n","import styled from \"styled-components\"\n\nexport const Styled = styled.div`\n  font-size: 1.125rem;\n  position: relative;\n  padding-top: 0.75rem;\n  padding-bottom: 1rem;\n\n  .editWordLink {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    font-size: 2rem;\n    color: var(--color-subtle);\n    z-index: 100;\n  }\n\n  .ui-form-section {\n    .one {\n    }\n    .two {\n    }\n    .three {\n      text-align: center;\n      cursor: pointer;\n      color: var(--color-subtle);\n      white-space: nowrap;\n      font-size: 1.5rem;\n      margin: 1rem auto -1.5rem;\n      width: 5rem;\n\n      svg {\n        transform: scale(0.85);\n        display: inline-block;\n        top: -1rem;\n        position: relative;\n        background: var(--color-warmwhite);\n        padding: 0;\n      }\n    }\n    &.advanced {\n    }\n    &.simple {\n      .two {\n        position: relative;\n        white-space: nowrap;\n        overflow: hidden;\n        &:after {\n          content: \"\";\n          display: block;\n          position: absolute;\n          top: -0.5rem;\n          right: 0;\n          height: 2rem;\n          width: 60px;\n          background: linear-gradient(to left, var(--color-warmwhite) 0%, transparent 100%);\n        }\n      }\n    }\n  }\n\n  .posword {\n    //padding: 0 0.5rem 0 0;\n    display: inline-block;\n    //cursor:pointer;\n    font-size: 1.125rem;\n    color: var(--color-medium);\n  }\n\n  .title {\n    font-size: 1.25rem;\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Field from \"./Field\"\nimport Pos from \"./Pos\"\nimport FieldList from \"./FieldList\"\nimport { Styled } from \"./ViewWord.styled\"\nimport { faEdit } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\nimport DomExt from \"../Admin/EditDomain/DomExt\"\nimport PosWord from \"./PosWord\"\nimport Search from \"../../components/Search\"\nimport { StyledPage } from \"../../components/Page.styled\"\n\nexport default function (props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  /*\n   * Variables\n   */\n  // for content\n  let { word_input, word_chunks, api_actions } = that.props\n  let SearchAndHeader = (\n    <Search\n      {...that.props}\n      className={!word_input || !word_chunks.length ? \"Search SearchHome\" : \"Search\"}\n      domains={false}\n      title=\"Another word for...\"\n      placeholder=\"...\"\n      cue={[\n        <span key=\"1\">The most accurate thesaurus API&nbsp;</span>,\n        <span key=\"2\">\n          for <>N</>atural <>L</>anguage <>P</>rocessing applications.\n        </span>\n      ]}\n    />\n  )\n  if (word_input && !word_chunks[word_input]) {\n    return (\n      <>\n        {SearchAndHeader}\n        <StyledPage>\n          <Styled className=\"ViewWord content\">\n            {/*Edit*/}\n            <Link className={\"editWordLink\"} to={`/edit_word?str=${word_input}`}>\n              <FA icon={faEdit} className=\"faEdit\" style={{ transform: \"scale(0.85)\" }} />\n            </Link>\n\n            {/*Fields*/}\n            <p>Word not found</p>\n          </Styled>\n        </StyledPage>\n      </>\n    )\n  }\n  let row = word_chunks[word_input]\n  let domains = (row.tlds || []).flat()\n  let best_of = (row.pos_short || {}).all || []\n  console.log(\"row\", row)\n\n  return (\n    <>\n      {SearchAndHeader}\n      <StyledPage>\n        <Styled className=\"ViewWord content\">\n          {/*Edit*/}\n          <Link className={\"editWordLink\"} to={`/edit_word?str=${row.key}`}>\n            <FA icon={faEdit} className=\"faEdit\" style={{ transform: \"scale(0.85)\" }} />\n          </Link>\n\n          {/*Key*/}\n          <p className=\"color-attention-dark\">\n            \"<b>{row.str || row.key}</b>\" synonyms and info:\n          </p>\n\n          {/*Fields*/}\n          <div className={\"ui-form-section ui-form-fieldset-grid\"}>\n            {[\n              \"root\",\n              \"prefix\",\n              \"singular\",\n              \"plural\",\n              \"abbreviation\",\n              \"acronym\",\n              \"conjunction\",\n              \"list_count\",\n              \"ws_sentiment\"\n            ]\n              .filter((field) => row[field] || row[field] === 0)\n              .map((field, pi) => (\n                <Field field={field} row={row} key={row.key + pi} />\n              ))}\n\n            {/*\n             * Best Of\n             */}\n            {!!(best_of && best_of.length) && (\n              <div className=\"ui-form-fieldset\">\n                <span className=\"label\">best_of:</span>\n                <span className=\"value\">\n                  {best_of.map((w, i) => (\n                    <PosWord api_actions={api_actions} key={w} word={w} />\n                  ))}\n                </span>\n              </div>\n            )}\n\n            {/*\n             * Domains\n             */}\n            {!!(domains && domains.length) && (\n              <div className=\"ui-form-fieldset\">\n                <span className=\"label\">domains:</span>\n                <span className=\"value\">\n                  {domains.map((dom, i) => (\n                    <DomExt key={dom + i} domext={dom} />\n                  ))}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/*\n           * Lists\n           */}\n          <div className={\"ui-form-section\"}>\n            {[row.pos1, row.pos2, \"bef\", \"aft\", \"ety\", \"etc\"].map((pos, pi) => (\n              <Pos api_actions={api_actions} pos={pos} row={row} key={pos + pi} expand={false} />\n            ))}\n            {[\"ok_list\", \"list\"].map((field, pi) => (\n              <FieldList field={field} row={row} key={row.key + pi} />\n            ))}\n          </div>\n        </Styled>\n      </StyledPage>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Styled } from \"./ViewWord.styled\"\nimport Search from \"../../components/Search\"\nimport { StyledPage } from \"../../components/Page.styled\"\nimport { Link } from \"gatsby\"\n\nexport default function (props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  /*\n   * Variables\n   */\n  // for content\n  let { word_input } = that.props\n  return (\n    <>\n      <Search\n        {...that.props}\n        className={!word_input ? \"Search SearchHome\" : \"Search\"}\n        domains={false}\n        title=\"Another word for...\"\n        placeholder=\"...\"\n        home={true}\n        cue={[\n          <span key=\"1\">The most accurate thesaurus API&nbsp;</span>,\n          <span key=\"2\">for Natural Language Processing applications.</span>,\n          <div key=\"3\">\n            Currently powers <Link to=\"/domain\">NLP.domains</Link>. More info coming soon!\n          </div>\n        ]}\n      />\n      <StyledPage>\n        <Styled className=\"ViewWord content\">\n          <p>\n            Try it out &#9757; Type in any word, like <Link to=\"/word?str=aloha\">aloha</Link> or{\" \"}\n            <Link to=\"/word?str=appendectomy\">appendectomy</Link>.\n          </p>\n          <p>More info and functionality coming soon!</p>\n          <p>This service is in stealth mode! Under active development.</p>\n        </Styled>\n      </StyledPage>\n    </>\n  )\n}\n","import React from \"react\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport * as ui_actions from \"src/redux/actions/ui\"\nimport api_actions from \"src/redux/actions/api\"\nimport * as input_actions from \"src/redux/actions/input\"\nimport ViewWordResults from \"./ViewWordResults\"\nimport ViewWordHome from \"./ViewWordHome\"\n\nclass ViewWord extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    props.ui_actions.RX__search_title(\"Thesaurus Search:\")\n  }\n\n  componentDidMount() {\n    /*\n     * Get word\n     */\n    this.props.input_actions.RX__search_thesaurus()\n  }\n\n  async componentDidUpdate(prevProps) {\n    /*\n     * Get word\n     */\n    if (this.props.search_now && this.props.search_now !== prevProps.search_now) {\n      this.props.input_actions.RX__search_thesaurus()\n    }\n  }\n\n  render() {\n    let { word_input } = this.props\n    return <>{word_input ? <ViewWordResults that={this} /> : <ViewWordHome that={this} />}</>\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ui_actions: bindActionCreators(ui_actions, dispatch),\n    api_actions: bindActionCreators(api_actions, dispatch),\n    input_actions: bindActionCreators(input_actions, dispatch)\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    word_input: state.input.input_str,\n    word_chunks: state.output.chunks,\n    search_now: state.input.search_now\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewWord)\n","import ViewWord from \"./ViewWord\"\n\nexport default ViewWord\n","import React from \"react\"\nimport Layout from \"../components/Page\"\nimport Word from \"src/containers/Word\"\n\nclass RootIndex extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <Word location={this.props.location} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n","import React from \"react\"\n\nconst styles = {\n  Hint: {\n    display: \"block\",\n    lineHeight: \"1em\",\n    fontSize: \"0.67em\",\n    fontWeight: \"bold\",\n    padding: \"0\",\n    margin: \"0\"\n  }\n}\n\nexport default (props) => {\n  // validate\n  let { style = {}, className = \"\", children } = props\n  if (!children) {\n    return null\n  }\n  // display\n  return (\n    <span className={className} style={{ ...styles.Hint, ...style }}>\n      {children}\n    </span>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass DomExt extends React.Component {\n  render() {\n    if (!this.props.domext) {\n      return null\n    }\n    return (\n      <span>\n        {/*\n         * word\n         */}\n        <span className={\"posword\"}>\n          <Link\n            to={`/edit_domain?tld=${this.props.domext}`}\n            onClick={() => {\n              window.isLoading(\"render\")\n            }}\n          >\n            {this.props.domext},&nbsp;\n          </Link>\n        </span>\n      </span>\n    )\n  }\n}\n\nexport default DomExt\n","import React from \"react\"\nimport { Menu } from \"antd\"\nimport { Link } from \"gatsby\"\n\nclass Definitions extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      definitions: []\n    }\n  }\n\n  componentDidMount() {\n    this.props.api_actions.definitions_list_get(this.props.word).then((defs) => {\n      this.setState({\n        definitions: defs\n      })\n    })\n  }\n\n  render() {\n    if (!this.state.definitions || !Array.isArray(this.state.definitions)) {\n      return null\n    }\n    let List = []\n    for (let def of this.state.definitions) {\n      List.push(<Menu.Item>{def}</Menu.Item>)\n    }\n    return <Menu className={\"antd-word-definitions-dropdown-menu\"}>{List}</Menu>\n  }\n}\n\nclass PosWord extends React.Component {\n  render() {\n    let { word, api_actions } = this.props\n    if (!word || word === \" \") {\n      return null\n    }\n    return (\n      <>\n        {/*<Dropdown overlay={<Definitions api_actions={api_actions} word={word}/>} trigger={['contextMenu']}>*/}\n        <span className={\"posword\"}>\n          {/*{word},*/}\n          <Link to={`/word?str=${word}`} className=\"color-medium\">\n            {word}\n          </Link>\n          ,&nbsp;\n        </span>\n        {/*</Dropdown>*/}\n      </>\n    )\n  }\n}\n\nexport default PosWord\n"],"sourceRoot":""}