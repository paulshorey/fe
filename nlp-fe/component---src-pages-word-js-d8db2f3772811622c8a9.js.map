{"version":3,"sources":["webpack:///./src/redux/actions/api/thirdparty.js","webpack:///./src/redux/actions/api/data_domain.js","webpack:///./src/redux/actions/api/data_word.js","webpack:///./src/redux/actions/api/index.js","webpack:///./src/containers/Word/Field.js","webpack:///./src/containers/Word/Pos.js","webpack:///./src/containers/Word/FieldList.js","webpack:///./src/containers/Word/ViewWord.styled.js","webpack:///./src/containers/Word/ViewWordResults.js","webpack:///./src/containers/Word/ViewWordHome.js","webpack:///./src/containers/Word/ViewWord.js","webpack:///./src/containers/Word/index.js","webpack:///./src/pages/word.js","webpack:///./src/components/Hint.js","webpack:///./src/containers/Admin/EditDomain/DomExt.js","webpack:///../nlp-be/data/words/dict/pos_expand.js","webpack:///./src/containers/Word/PosWord.js","webpack:///../nlp-be/data/words/function/pos_expand.js"],"names":["API_HOST","process","ADMIN_API_HOST","definitions_list_get","key","a","apiGET","row","json_parse","data_domains_all","window","isLoading","dispatch","doneLoading","data_domain_syns_dict","data","setTimeout","data_domain_get","data_domain_edit","Array","isArray","syns1","split","map","w","trim","filter","getState","apiPUT","res","message","success","data_word_edit","console","log","axios","method","url","then","RX__search_thesaurus","force","catch","err","error","data_word_sentiment_of_synonym","synonym","sentiment","data_word_proper_of_synonym","proper","data_word_add_poswords","pos","poswords","poslist","length","data_word_remove_words","wordsString","wordsList","words","data_word_remove_synonym","thirdparty","domain","word","Field","render","this","props","field","undefined","label","value","className","style","maxWidth","React","Component","state","advanced","expand","api_actions","slist_n","slist","dict","info","slist_shorter","pos_short","ListShorter","ListOk","Object","entries","tuple","val","ListBad","ListProper","ListUnknown","pos_expand","marginBottom","onClick","setState","icon","faEllipsisH","Hint","faAngleUp","PosWord","to","i","transform","Styled","styled","div","that","word_input","word_chunks","SearchAndHeader","Search","domains","title","placeholder","cue","faEdit","tlds","flat","best_of","all","str","pi","dom","DomExt","domext","pos1","pos2","home","ViewWord","ui_actions","RX__search_title","componentDidMount","input_actions","componentDidUpdate","prevProps","search_now","ViewWordResults","ViewWordHome","connect","input","input_str","output","chunks","bindActionCreators","RootIndex","location","Word","styles","display","lineHeight","fontSize","fontWeight","padding","margin","children","nou","ver","adj","adv","etc","pro","pre","det","int","con","ety","bef","aft","mod"],"mappings":"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","file":"component---src-pages-word-js-d8db2f3772811622c8a9.js","sourcesContent":["import { apiGET } from \"universal-common-scripts/functions/requests\"\nimport { json_parse } from \"universal-common-scripts/functions/objects\"\n\nconst API_HOST = \"//\" + process.env.ADMIN_API_HOST\n\n/*\n * THIRDPARTY\n */\nexport function definitions_list_get(key) {\n  return async () => {\n    // get word\n    let row = await apiGET(API_HOST + \"/api/oxford/definition/\" + key)\n    if (row) {\n      // success\n      row = json_parse(row)\n      return row\n    }\n    // fail\n    return false\n  }\n}\n","import { apiGET, apiPUT, apiPOST } from \"universal-common-scripts/functions/requests\"\nimport { json_parse } from \"universal-common-scripts/functions/objects\"\n\nimport { message } from \"antd\"\n\nconst API_HOST = \"//\" + process.env.ADMIN_API_HOST\n\nexport function data_domains_all(key) {\n  window.isLoading(\"domains\")\n  return async (dispatch) => {\n    // get word\n    let row = await apiGET(API_HOST + \"/api/data/domains\")\n    if (row) {\n      // success\n      row = json_parse(row)\n      window.doneLoading(\"domains\")\n      return row\n    }\n    // fail\n    window.doneLoading(\"domains\")\n    return false\n  }\n}\n\nexport function data_domain_syns_dict(key) {\n  window.isLoading(\"domain\")\n  return async (dispatch) => {\n    // get word\n    let data = await apiGET(API_HOST + \"/api/data/domain_syns_of_syns/\" + key)\n    if (data) {\n      // success\n      setTimeout(() => {\n        window.doneLoading(\"domain\")\n      }, 500)\n      return data\n    }\n    // fail\n    window.doneLoading(\"domain\")\n    return false\n  }\n}\n\nexport function data_domain_get(key) {\n  window.isLoading(\"domain\")\n  return async (dispatch) => {\n    // get word\n    let row = await apiGET(API_HOST + \"/api/data/domain/\" + key)\n    if (row) {\n      // success\n      row = json_parse(row)\n      window.doneLoading(\"domain\")\n      return row\n    }\n    // fail\n    window.doneLoading(\"domain\")\n    return false\n  }\n}\n\nexport function data_domain_edit(row) {\n  window.isLoading(\"domain\")\n  // validate\n  if (!Array.isArray(row.syns1)) {\n    row.syns1 = (row.syns1 || \"\")\n      .split(\",\")\n      .map((w) => w.trim())\n      .filter((w) => !!w)\n  }\n  return async (dispatch, getState) => {\n    // save\n    let res = await apiPUT(API_HOST + \"/api/data/domain/\" + row.key, row)\n    if (res) {\n      // ui alert\n      message.success(`edited domain \"${row.key}\"`)\n      window.isLoading(\"domain\")\n      return res\n    }\n    window.isLoading(\"domain\")\n    return false\n  }\n}\n","import { RX__search_thesaurus } from \"src/redux/actions/input\"\nimport { message } from \"antd\"\nimport axios from \"axios\"\n\nconst API_HOST = \"//\" + process.env.ADMIN_API_HOST\n\nexport function data_word_edit(row) {\n  console.log(\"attempting to edit word row: \", row)\n  return (dispatch) => {\n    // save\n    window.isLoading(\"word\")\n    return axios({\n      method: \"put\",\n      url: API_HOST + \"/api/data/word/\" + row.key,\n      data: row\n    })\n      .then(() => {\n        message.success(`edited word \"${row.key}\"`)\n        // update word\n        dispatch(RX__search_thesaurus({ force: true }))\n      })\n      .catch((err) => {\n        console.error(err)\n        message.error(`could not edit key=${row.key}`, 10)\n      })\n      .then(() => {\n        window.doneLoading(\"word\")\n      })\n  }\n}\n\nexport function data_word_sentiment_of_synonym(key, synonym, sentiment) {\n  return (dispatch) => {\n    // save\n    return axios({\n      method: \"put\",\n      url: API_HOST + \"/api/data/word_sentiment_of_synonym\",\n      data: { key, synonym, sentiment }\n    })\n      .then(() => {\n        message.success(`edited synonym=\"${synonym}\" sentiment=\"${sentiment}\"`)\n        // update word\n        dispatch(RX__search_thesaurus({ force: true }))\n      })\n      .catch((err) => {\n        console.error(err)\n        message.error(`could not edit key=${key}`, 10)\n      })\n  }\n}\n\nexport function data_word_proper_of_synonym(key, synonym, proper) {\n  return (dispatch) => {\n    // save\n    return axios({\n      method: \"put\",\n      url: API_HOST + \"/api/data/word_proper_of_synonym/\" + key + \"/\" + synonym,\n      data: { proper }\n    })\n      .then(() => {\n        message.success(`edited synonym=\"${synonym}\" proper=\"${proper}\"`)\n        // update word\n        dispatch(RX__search_thesaurus({ force: true }))\n      })\n      .catch((err) => {\n        console.error(err)\n        message.error(`could not edit key=${key}`, 10)\n      })\n  }\n}\n\nexport function data_word_add_poswords(key, pos, poswords) {\n  return (dispatch) => {\n    // prep\n    let poslist = poswords.split(\",\").map((w) => w.trim())\n    if (poslist && poslist.length) {\n      // save\n      return axios({\n        method: \"put\",\n        url: API_HOST + \"/api/data/word_add_poswords\",\n        data: { key, pos, poswords: poslist }\n      })\n        .then(() => {\n          message.success(`added poswords=\"${poswords}\" to pos=\"${pos}\"`)\n          // update word\n          dispatch(RX__search_thesaurus({ force: true }))\n        })\n        .catch((err) => {\n          console.error(err)\n          message.error(`could not save key=${key}, pos=${pos}, poswords=${poswords}`, 10)\n        })\n    }\n  }\n}\n\nexport function data_word_remove_words(key, wordsString) {\n  return (dispatch) => {\n    // prep\n    let wordsList = wordsString.split(\",\").map((w) => w.trim())\n    if (wordsList && wordsList.length) {\n      // save\n      return axios({\n        method: \"put\",\n        url: API_HOST + \"/api/data/word_remove_words\",\n        data: { key, words: wordsList }\n      })\n        .then(() => {\n          message.success(`removed poswords=\"${wordsString}\" from key=\"${key}\"`)\n          // update word\n          dispatch(RX__search_thesaurus({ force: true }))\n        })\n        .catch((err) => {\n          console.error(err)\n          message.error(`could not save key=${key}, words=${wordsString}`, 10)\n        })\n    }\n  }\n}\n\nexport function data_word_remove_synonym(key, synonym) {\n  return (dispatch) => {\n    // save\n    return axios({\n      method: \"put\",\n      url: API_HOST + \"/api/data/word_remove_synonym/\" + key + \"/\" + synonym,\n      data: {}\n    })\n      .then(() => {\n        message.success(`removed synonym=\"${synonym}\" from key=\"${key}\"`)\n        // update word\n        dispatch(RX__search_thesaurus({ force: true }))\n      })\n      .catch((err) => {\n        console.error(err)\n        message.error(`could not remove synonym=\"${synonym}\" from key=\"${key}\"`, 10)\n      })\n  }\n}\n\n// export function data_word_add_to_others({ addWord, pos, addToOthers }) {\n//   window.isLoading('add_to_others')\n//   return async (dispatch) => {\n//     // save\n//     return axios({\n//       'method': 'put',\n//       'url': API_HOST + '/api/data/word_add_to_others',\n//       'data': { addWord, pos, addToOthers },\n//     })\n//       .then(() => {\n//         message.success(`removed synonym=\"${synonym}\" from key=\"${key}\"`)\n//         // update word\n// //         dispatch(RX__search_thesaurus({force:true}))\n//       })\n//       .catch((err) => {\n//         console.error(err)\n//         message.error(`could not remove synonym=\"${synonym}\" from key=\"${key}\"`, 10)\n//       })\n//       .then(() => {\n//         window.doneLoading('add_to_others')\n//       })\n//   }\n// }\n","import * as thirdparty from \"src/redux/actions/api/thirdparty\"\nimport * as domain from \"./data_domain\"\nimport * as word from \"./data_word\"\n\nexport default { ...thirdparty, ...domain, ...word }\n","import React from \"react\"\n\nclass Field extends React.Component {\n  render() {\n    // validate\n    let { row, field } = this.props\n    if (!row || typeof row[field] === undefined) {\n      return <p>No {field}</p>\n    }\n    // filter\n    let label = field\n    let value = row[field]\n    if (field === \"ws_sentiment\") {\n      label = \"sentiment\"\n      value = value >= 0 ? \"👍\" : value === -1 ? \"👎\" : \"undefined\"\n    }\n    // display\n    return (\n      <div className={\"ui-form-fieldset\"}>\n        <div className={\"label\"}>{label}</div>\n        <div className={\"value\"} style={{ maxWidth: 10000 }}>\n          {value}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Field\n","import React from \"react\"\nimport Hint from \"src/components/Hint\"\nimport PosWord from \"./PosWord\"\nimport { faAngleUp, faEllipsisH } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\n// import { asort_by_length_and_position } from 'universal-common-scripts/functions/asort_strings'\nimport pos_expand from \"data/words/function/pos_expand\"\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: props.expand || false\n    }\n  }\n\n  render() {\n    let { pos, row, api_actions } = this.props\n    /*\n     * validate\n     */\n    if (!pos) {\n      return null\n    }\n    /*\n     * slice of row.dict,\n     * with before/after\n     */\n    let slist_n = 0\n    let slist = {}\n    for (let word in row.dict) {\n      let info = row.dict[word]\n      // info[11] = bef/aft/ety\n      // info[9] = nou/ver/adj\n      // info[12] = must be real synonym, not derivation\n      if (pos === (info[11] || info[9]) && info[12]) {\n        slist[word] = info\n        slist_n++\n      }\n    }\n    if (!slist_n) {\n      return null\n    }\n    /*\n     * shortened preview\n     */\n    let slist_shorter = (row.pos_short && row.pos_short[pos]) || []\n    console.log(\"row\", row)\n    let ListShorter = slist_shorter.map((word) => <PosWord api_actions={api_actions} key={word} word={word} />)\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListOk = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[0] === 1 && info[1] === 0) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListBad = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[0] === 0 && info[1] === 0) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListProper = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[1] === 1) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListUnknown = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[2] === 1) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n\n    /*\n     *\n     * Render simple version:\n     *\n     */\n    if (!this.state.advanced && ListShorter.length) {\n      return (\n        <div className={\"ui-form-section simple\"}>\n          <div>\n            <div className={\"one\"}>\n              <b>{pos_expand(pos)}: </b>\n            </div>\n            <div className=\"two posWords\" style={{ marginBottom: 15 }}>\n              {ListShorter}\n            </div>\n            <div\n              className={\"three\"}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n              <FA icon={faEllipsisH} className=\"faEllipsisH\" />\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      /*\n       *\n       * Render advanced version:\n       *\n       */\n      if (!ListOk.length && !ListBad.length && !ListProper.length && !ListUnknown.length) {\n        return null\n      }\n      return (\n        <div className={\"ui-form-section advanced\"}>\n          <p className={\"one\"}>\n            <b className=\"title\">{pos_expand(pos)}:</b>\n          </p>\n\n          <div className={\"two\"}>\n            {ListShorter.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128512;</>}: </sub>*/}\n                <Hint className={\"color-accent opacity50\"}>Sorted by length:</Hint>\n                <span className=\"posWords opacity50\">{ListShorter}</span>\n              </p>\n            )}\n            {ListOk.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128512;</>}: </sub>*/}\n                <Hint className={\"color-accent opacity50\"}>Ok/Good:</Hint>\n                <span className=\"posWords\">{ListOk}</span>\n              </p>\n            )}\n            {ListBad.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128545;</>}: </sub>*/}\n                <Hint className={\"color-bad opacity50\"}>Negative:</Hint>\n                <span className=\"posWords\">{ListBad}</span>\n              </p>\n            )}\n            {ListProper.length > 0 && (\n              <p>\n                {/*<sub>{<>&#127963;</>}: </sub>*/}\n                <Hint className={\"color-light opacity75\"}>Proper:</Hint>\n                <span className=\"posWords\">{ListProper}</span>\n              </p>\n            )}\n            {ListUnknown.length > 0 && (\n              <p>\n                {/*<sub>{<>&#10067;</>}: </sub>*/}\n                <Hint className={\"color-light opacity75\"}>Unknown sentiment:</Hint>\n                <span className=\"posWords\">{ListUnknown}</span>\n              </p>\n            )}\n          </div>\n\n          <p\n            className={\"three\"}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n            <FA icon={faAngleUp} className=\"faAngleUp\" />\n          </p>\n        </div>\n      )\n    }\n  }\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { faEllipsisH, faAngleUp } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\n// import Hint from \"src/components/Hint\";\n\nconst PosWord = ({ word }) => (\n  <span className=\"posword\">\n    <Link to={`/word?str=${word}`}>{word}</Link>,\n  </span>\n)\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: false\n    }\n  }\n\n  render() {\n    let { field, row } = this.props\n    /*\n     * Validate\n     */\n    if (!field || !Array.isArray(row[field])) {\n      return null\n    }\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListOk = row[field]\n      .map((word, i) => {\n        return <PosWord word={word} key={word + i} />\n      })\n      .filter((val) => !!val)\n    /*\n     * Render simple version:\n     */\n    if (!this.state.advanced) {\n      return (\n        <div className={\"ui-form-section simple\"}>\n          <div>\n            {ListOk.length > 0 && (\n              <>\n                <div className={\"one\"}>\n                  <b>{field}: </b>\n                </div>\n                <div className=\"two fieldWords\">{ListOk}</div>\n              </>\n            )}\n            <div\n              className={\"three\"}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n              <FA icon={faEllipsisH} className=\"faEllipsisH\" style={{ transform: \"scale(0.85)\" }} />\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      /*\n       * Render advanced version:\n       */\n      return (\n        <div className={\"ui-form-section advanced\"}>\n          <p className={\"one\"}>\n            <b className=\"title\">{field}:</b>\n          </p>\n\n          <div className={\"two\"}>{ListOk.length > 0 && <p className=\"fieldWords\">{ListOk}</p>}</div>\n\n          <p\n            className={\"three\"}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n            <FA icon={faAngleUp} className=\"faAngleUp\" style={{ transform: \"scale(0.85)\" }} />\n          </p>\n        </div>\n      )\n    }\n  }\n}\n","import styled from \"styled-components\"\n\nexport const Styled = styled.div`\n  font-size: 1.125rem;\n  position: relative;\n  padding-top: 0.75rem;\n  padding-bottom: 1rem;\n\n  .editWordLink {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    font-size: 2rem;\n    color: var(--color-subtle);\n    z-index: 100;\n  }\n\n  .ui-form-section {\n    .one {\n    }\n    .two {\n    }\n    .three {\n      text-align: center;\n      cursor: pointer;\n      color: var(--color-subtle);\n      white-space: nowrap;\n      font-size: 1.5rem;\n      margin: 1rem auto -1.5rem;\n      width: 5rem;\n\n      svg {\n        transform: scale(0.85);\n        display: inline-block;\n        top: -1rem;\n        position: relative;\n        background: var(--color-warmwhite);\n        padding: 0;\n      }\n    }\n    &.advanced {\n    }\n    &.simple {\n      .two {\n        position: relative;\n        white-space: nowrap;\n        overflow: hidden;\n        &:after {\n          content: \"\";\n          display: block;\n          position: absolute;\n          top: -0.5rem;\n          right: 0;\n          height: 2rem;\n          width: 60px;\n          background: linear-gradient(to left, var(--color-warmwhite) 0%, transparent 100%);\n        }\n      }\n    }\n  }\n\n  .posword {\n    //padding: 0 0.5rem 0 0;\n    display: inline-block;\n    //cursor:pointer;\n    font-size: 1.125rem;\n    color: var(--color-medium);\n  }\n\n  .title {\n    font-size: 1.25rem;\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Field from \"./Field\"\nimport Pos from \"./Pos\"\nimport FieldList from \"./FieldList\"\nimport { Styled } from \"./ViewWord.styled\"\nimport { faEdit } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\nimport DomExt from \"../Admin/EditDomain/DomExt\"\nimport PosWord from \"./PosWord\"\nimport Search from \"../../components/Search\"\nimport { StyledPage } from \"../../components/Page.styled\"\n\nexport default function (props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  /*\n   * Variables\n   */\n  // for content\n  let { word_input, word_chunks, api_actions } = that.props\n  let SearchAndHeader = (\n    <Search\n      {...that.props}\n      className={!word_input || !word_chunks.length ? \"Search SearchHome\" : \"Search\"}\n      domains={false}\n      title=\"Another word for...\"\n      placeholder=\"...\"\n      cue={[\n        <span key=\"1\">The most accurate thesaurus API&nbsp;</span>,\n        <span key=\"2\">\n          for <>N</>atural <>L</>anguage <>P</>rocessing applications.\n        </span>\n      ]}\n    />\n  )\n  if (word_input && !word_chunks[word_input]) {\n    return (\n      <>\n        {SearchAndHeader}\n        <StyledPage>\n          <Styled className=\"ViewWord content\">\n            {/*Edit*/}\n            <Link className={\"editWordLink\"} to={`/edit_word?str=${word_input}`}>\n              <FA icon={faEdit} className=\"faEdit\" style={{ transform: \"scale(0.85)\" }} />\n            </Link>\n\n            {/*Fields*/}\n            <p>Word not found</p>\n          </Styled>\n        </StyledPage>\n      </>\n    )\n  }\n  let row = word_chunks[word_input]\n  let domains = (row.tlds || []).flat()\n  let best_of = (row.pos_short || {}).all || []\n  console.log(\"row\", row)\n\n  return (\n    <>\n      {SearchAndHeader}\n      <StyledPage>\n        <Styled className=\"ViewWord content\">\n          {/*Edit*/}\n          <Link className={\"editWordLink\"} to={`/edit_word?str=${row.key}`}>\n            <FA icon={faEdit} className=\"faEdit\" style={{ transform: \"scale(0.85)\" }} />\n          </Link>\n\n          {/*Key*/}\n          <p className=\"color-attention-dark\">\n            \"<b>{row.str || row.key}</b>\" synonyms and info:\n          </p>\n\n          {/*Fields*/}\n          <div className={\"ui-form-section ui-form-fieldset-grid\"}>\n            {[\n              \"root\",\n              \"prefix\",\n              \"singular\",\n              \"plural\",\n              \"abbreviation\",\n              \"acronym\",\n              \"conjunction\",\n              \"list_count\",\n              \"ws_sentiment\"\n            ]\n              .filter((field) => row[field] || row[field] === 0)\n              .map((field, pi) => (\n                <Field field={field} row={row} key={row.key + pi} />\n              ))}\n\n            {/*\n             * Best Of\n             */}\n            {!!(best_of && best_of.length) && (\n              <div className=\"ui-form-fieldset\">\n                <span className=\"label\">best_of:</span>\n                <span className=\"value\">\n                  {best_of.map((w, i) => (\n                    <PosWord api_actions={api_actions} key={w} word={w} />\n                  ))}\n                </span>\n              </div>\n            )}\n\n            {/*\n             * Domains\n             */}\n            {!!(domains && domains.length) && (\n              <div className=\"ui-form-fieldset\">\n                <span className=\"label\">domains:</span>\n                <span className=\"value\">\n                  {domains.map((dom, i) => (\n                    <DomExt key={dom + i} domext={dom} />\n                  ))}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/*\n           * Lists\n           */}\n          <div className={\"ui-form-section\"}>\n            {[row.pos1, row.pos2, \"bef\", \"aft\", \"ety\", \"etc\"].map((pos, pi) => (\n              <Pos api_actions={api_actions} pos={pos} row={row} key={pos + pi} expand={false} />\n            ))}\n            {[\"ok_list\", \"list\"].map((field, pi) => (\n              <FieldList field={field} row={row} key={row.key + pi} />\n            ))}\n          </div>\n        </Styled>\n      </StyledPage>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Styled } from \"./ViewWord.styled\"\nimport Search from \"../../components/Search\"\nimport { StyledPage } from \"../../components/Page.styled\"\nimport { Link } from \"gatsby\"\n\nexport default function (props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  /*\n   * Variables\n   */\n  // for content\n  let { word_input } = that.props\n  return (\n    <>\n      <Search\n        {...that.props}\n        className={!word_input ? \"Search SearchHome\" : \"Search\"}\n        domains={false}\n        title=\"Another word for...\"\n        placeholder=\"...\"\n        home={true}\n        cue={[\n          <span key=\"1\">The most accurate thesaurus API&nbsp;</span>,\n          <span key=\"2\">for Natural Language Processing applications.</span>,\n          <div key=\"3\">\n            Currently powers <Link to=\"/domain\">NLP.domains</Link>. More info coming soon!\n          </div>\n        ]}\n      />\n      <StyledPage>\n        <Styled className=\"ViewWord content\">\n          <p>\n            Try it out &#9757; Type in any word, like <Link to=\"/word?str=aloha\">aloha</Link> or{\" \"}\n            <Link to=\"/word?str=appendectomy\">appendectomy</Link>.\n          </p>\n          <p>More info and functionality coming soon!</p>\n          <p>This service is in stealth mode! Under active development.</p>\n        </Styled>\n      </StyledPage>\n    </>\n  )\n}\n","import React from \"react\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport * as ui_actions from \"src/redux/actions/ui\"\nimport api_actions from \"src/redux/actions/api\"\nimport * as input_actions from \"src/redux/actions/input\"\nimport ViewWordResults from \"./ViewWordResults\"\nimport ViewWordHome from \"./ViewWordHome\"\n\nclass ViewWord extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    props.ui_actions.RX__search_title(\"Thesaurus Search:\")\n  }\n\n  componentDidMount() {\n    /*\n     * Get word\n     */\n    this.props.input_actions.RX__search_thesaurus()\n  }\n\n  async componentDidUpdate(prevProps) {\n    /*\n     * Get word\n     */\n    if (this.props.search_now && this.props.search_now !== prevProps.search_now) {\n      this.props.input_actions.RX__search_thesaurus()\n    }\n  }\n\n  render() {\n    let { word_input } = this.props\n    return <>{word_input ? <ViewWordResults that={this} /> : <ViewWordHome that={this} />}</>\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ui_actions: bindActionCreators(ui_actions, dispatch),\n    api_actions: bindActionCreators(api_actions, dispatch),\n    input_actions: bindActionCreators(input_actions, dispatch)\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    word_input: state.input.input_str,\n    word_chunks: state.output.chunks,\n    search_now: state.input.search_now\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewWord)\n","import ViewWord from \"./ViewWord\"\n\nexport default ViewWord\n","import React from \"react\"\nimport Layout from \"../components/Page\"\nimport Word from \"src/containers/Word\"\n\nclass RootIndex extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <Word location={this.props.location} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n","import React from \"react\"\n\nconst styles = {\n  Hint: {\n    display: \"block\",\n    lineHeight: \"1em\",\n    fontSize: \"0.67em\",\n    fontWeight: \"bold\",\n    padding: \"0\",\n    margin: \"0\"\n  }\n}\n\nexport default (props) => {\n  // validate\n  let { style = {}, className = \"\", children } = props\n  if (!children) {\n    return null\n  }\n  // display\n  return (\n    <span className={className} style={{ ...styles.Hint, ...style }}>\n      {children}\n    </span>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass DomExt extends React.Component {\n  render() {\n    if (!this.props.domext) {\n      return null\n    }\n    return (\n      <span>\n        {/*\n         * word\n         */}\n        <span className={\"posword\"}>\n          <Link\n            to={`/edit_domain?tld=${this.props.domext}`}\n            onClick={() => {\n              window.isLoading(\"render\")\n            }}\n          >\n            {this.props.domext},&nbsp;\n          </Link>\n        </span>\n      </span>\n    )\n  }\n}\n\nexport default DomExt\n","export default {\n  nou: \"nouns\",\n  ver: \"verbs\",\n  adj: \"adjectives\",\n  adv: \"adverbs\",\n  etc: \"etc\",\n  pro: \"pronouns\",\n  pre: \"prepositions\",\n  det: \"determiners\",\n  int: \"interjections\",\n  con: \"conjunctions\",\n  ety: \"etymology\",\n  bef: \"before\",\n  aft: \"after\",\n  mod: \"modal\"\n}\n","import React from \"react\"\nimport { Menu } from \"antd\"\nimport { Link } from \"gatsby\"\n\nclass Definitions extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      definitions: []\n    }\n  }\n\n  componentDidMount() {\n    this.props.api_actions.definitions_list_get(this.props.word).then((defs) => {\n      this.setState({\n        definitions: defs\n      })\n    })\n  }\n\n  render() {\n    if (!this.state.definitions || !Array.isArray(this.state.definitions)) {\n      return null\n    }\n    let List = []\n    for (let def of this.state.definitions) {\n      List.push(<Menu.Item>{def}</Menu.Item>)\n    }\n    return <Menu className={\"antd-word-definitions-dropdown-menu\"}>{List}</Menu>\n  }\n}\n\nclass PosWord extends React.Component {\n  render() {\n    let { word, api_actions } = this.props\n    if (!word || word === \" \") {\n      return null\n    }\n    return (\n      <>\n        {/*<Dropdown overlay={<Definitions api_actions={api_actions} word={word}/>} trigger={['contextMenu']}>*/}\n        <span className={\"posword\"}>\n          {/*{word},*/}\n          <Link to={`/word?str=${word}`} className=\"color-medium\">\n            {word}\n          </Link>\n          ,&nbsp;\n        </span>\n        {/*</Dropdown>*/}\n      </>\n    )\n  }\n}\n\nexport default PosWord\n","import pos_expand from '../dict/pos_expand'\n\nexport default function (str) {\n  let string = pos_expand[str]\n  return string || str\n}"],"sourceRoot":""}