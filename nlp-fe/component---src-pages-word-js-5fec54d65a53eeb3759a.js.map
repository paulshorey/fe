{"version":3,"sources":["webpack:///./src/components/Footer.styled.js","webpack:///./src/components/Footer.js","webpack:///./src/containers/Word/PosWord.js","webpack:///./src/containers/Word/FieldList.js","webpack:///./src/containers/Word/Field.js","webpack:///./src/containers/Word/Pos.js","webpack:///./src/containers/Word/WordResults.styled.js","webpack:///./src/containers/Word/WordResults.js","webpack:///./src/containers/Word/WordHome.styled.js","webpack:///./src/containers/Word/WordHome.js","webpack:///./src/containers/Word/Word.js","webpack:///./src/containers/Word/index.js","webpack:///./src/pages/word.js","webpack:///./src/components/Hint.js","webpack:///./src/containers/Admin/EditDomain/DomExt.js","webpack:///../nlp-be/data/words/dict/pos_expand.js","webpack:///../nlp-be/data/words/function/pos_expand.js"],"names":["StyledFooter","styled","div","className","to","icon","faBolt","href","target","React","Component","PosWord","render","this","props","word","api_actions","state","advanced","field","row","label","Array","isArray","ListOk","map","i","key","filter","val","length","onClick","setState","faAngleUp","style","transform","faEllipsisH","Field","undefined","value","list_count","maxWidth","expand","pos","slist_n","slist","dict","info","Object","entries","tuple","ListBad","ListProper","ListUnknown","pos_expand","Hint","marginBottom","ws_sentiment","StyledResults","that","SearchAndHeader","Search","domains","title","placeholder","word_input","word_chunks","faEdit","Set","tlds","flat","best_of","pos_short","all","weird_abbreviation","abbreviation","split","str","trim","pi","w","dom","DomExt","domext","aux","name","pos1","pos2","pos3","StyledHome","home","cue","Word","ui_actions","RX__search_title","componentDidMount","io_actions","RX__search_thesaurus","RX__set_inputs","tld","componentDidUpdate","prevProps","a","search_now","ViewWord","connect","input","output","chunks","dispatch","bindActionCreators","RootIndex","App","location","meta_title","Footer","styles","display","lineHeight","fontSize","fontWeight","padding","margin","children","window","isLoading","nou","ver","adj","adv","etc","pro","pre","det","int","con","ety","bef","aft","mod","ctr","ive"],"mappings":"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","file":"component---src-pages-word-js-5fec54d65a53eeb3759a.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const StyledFooter = styled.div`\n`","import { Link } from \"gatsby\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\nimport { faBolt } from \"@fortawesome/pro-solid-svg-icons\"\nimport { _ } from \"../containers/Domains/Domains.styled\"\nimport React from \"react\"\nimport { StyledFooter } from \"./Footer.styled.js\"\n\nexport default () => (\n  <StyledFooter>\n    <div className=\"footerCopyright\">\n      <p className=\"content\">\n        Built with ❤️&nbsp; by{\" \"}\n        <Link to=\"/about\" className=\"color-accent\">\n          Paul + Samira\n        </Link>\n        . All rights reserved. By using this site, you agree not to programmatically collect our content. Thanks a lot\n        for visiting!\n      </p>\n      <p className=\"content\">\n        Get this same <Link to=\"/api\">data, results, and algorithms</Link> for your site |{\" \"}\n        <Link to=\"/api\">this API is now available</Link> | <Link to=\"/contact\">Contact us</Link> | Text analysis{\" \"}\n        <FA icon={faBolt} className=\"faBolt\" /> by:{\" \"}\n        <a href=\"https://wordio.co\" target=\"_blank\">\n          wordio\n          <_ />\n          .<_ />\n          co\n        </a>\n      </p>\n    </div>\n  </StyledFooter>\n)\n","import React from \"react\"\nimport { Menu } from \"antd\"\nimport { Link } from \"gatsby\"\n\nclass Definitions extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      definitions: []\n    }\n  }\n\n  componentDidMount() {\n    this.props.api_actions.definitions_list_get(this.props.word).then((defs) => {\n      this.setState({\n        definitions: defs\n      })\n    })\n  }\n\n  render() {\n    if (!this.state.definitions || !Array.isArray(this.state.definitions)) {\n      return null\n    }\n    let List = []\n    for (let def of this.state.definitions) {\n      List.push(<Menu.Item>{def}</Menu.Item>)\n    }\n    return <Menu className={\"antd-word-definitions-dropdown-menu\"}>{List}</Menu>\n  }\n}\n\nclass PosWord extends React.Component {\n  render() {\n    let { word, api_actions } = this.props\n    if (!word || word === \" \") {\n      return null\n    }\n    return (\n      <>\n        {/*<Dropdown overlay={<Definitions api_actions={api_actions} word={word}/>} trigger={['contextMenu']}>*/}\n        <span className={\"posword\"}>\n          {/*{word},*/}\n          <Link to={`/word?str=${word}`} className=\"color-medium\">\n            {word}\n          </Link>\n          ,&nbsp;\n        </span>\n        {/*</Dropdown>*/}\n      </>\n    )\n  }\n}\n\nexport default PosWord\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { faEllipsisH, faAngleUp } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\nimport PosWord from \"./PosWord\"\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: false\n    }\n  }\n\n  render() {\n    let { field, row } = this.props\n    let label = field\n    if (field === \"list\") {\n      label = \"all\"\n    }\n    /*\n     * Validate\n     */\n    if (!field || !Array.isArray(row[field])) {\n      return null\n    }\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListOk = row[field]\n      .map((word, i) => {\n        return <PosWord word={word} key={word + i} />\n      })\n      .filter((val) => !!val)\n    /*\n     * Render simple version:\n     */\n    if (!this.state.advanced) {\n      return (\n        <div className={\"ui-form-section simple\"}>\n          <div>\n            {ListOk.length > 0 && (\n              <>\n                <div className={\"one\"}>\n                  <b>{label}: </b>\n                </div>\n                <div className=\"two fieldWords\">{ListOk}</div>\n              </>\n            )}\n            <div\n              className={\"three\"}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n              <FA icon={faEllipsisH} className=\"faEllipsisH\" style={{ transform: \"scale(0.85)\" }} />\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      /*\n       * Render advanced version:\n       */\n      return (\n        <div className={\"ui-form-section advanced\"}>\n          <p className={\"one\"}>\n            <b className=\"title\">{field}:</b>\n          </p>\n\n          <div className={\"two\"}>{ListOk.length > 0 && <p className=\"fieldWords\">{ListOk}</p>}</div>\n\n          <p\n            className={\"three\"}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n            <FA icon={faAngleUp} className=\"faAngleUp\" style={{ transform: \"scale(0.85)\" }} />\n          </p>\n        </div>\n      )\n    }\n  }\n}\n","import React from \"react\"\nimport PosWord from \"./PosWord\"\n\nclass Field extends React.Component {\n  render() {\n    // validate\n    let { row, field } = this.props\n    if (!row || typeof row[field] === undefined) {\n      return <p>No {field}</p>\n    }\n    // filter\n    let label = field\n    let value = row[field]\n    if (field === \"ws_sentiment\") {\n      label = \"sentiment\"\n      if (row.list_count >= 3) {\n        value = value >= 0 ? \"👍\" : value === -1 ? \"👎\" : \"undefined\"\n      } else {\n        value = \"?\"\n      }\n    } else {\n      value = <PosWord word={value} />\n    }\n    // display\n    return (\n      <div className={\"ui-form-fieldset\"}>\n        <div className={\"label\"}>{label}</div>\n        <div className={\"value\"} style={{ maxWidth: 10000 }}>\n          {value}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Field\n","import React from \"react\"\nimport Hint from \"src/components/Hint\"\nimport PosWord from \"./PosWord\"\nimport { faAngleUp, faEllipsisH } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\n// import { asort_by_length_and_position } from 'universal-common-scripts/src/asort_strings'\nimport pos_expand from \"data/words/function/pos_expand\"\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: props.expand || false\n    }\n  }\n\n  render() {\n    let { pos, row, api_actions } = this.props\n    /*\n     * validate\n     */\n    if (!pos) {\n      return null\n    }\n    /*\n     * slice of row.dict,\n     * with before/after\n     */\n    let slist_n = 0\n    let slist = {}\n    for (let word in row.dict) {\n      let info = row.dict[word]\n      // info[11] = bef/aft/ety\n      // info[9] = nou/ver/adj\n      // info[12] = must be real synonym, not derivation\n      if (pos === (info[11] || info[9]) && info[12]) {\n        slist[word] = info\n        slist_n++\n      }\n    }\n    if (!slist_n) {\n      return null\n    }\n    /*\n     * shortened preview\n     */\n    // let slist_shorter = (row.pos_short && row.pos_short[pos]) || []\n    // let ListShorter = slist_shorter.map((word) => <PosWord api_actions={api_actions} key={word} word={word} />)\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListOk = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[0] === 1 && info[1] === 0) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListBad = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[0] === 0 && info[1] === 0) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListProper = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[1] === 1) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n    let ListUnknown = Object.entries(slist)\n      .map((tuple) => {\n        let [word, info] = tuple\n        if (info[2] === 1) {\n          return <PosWord api_actions={api_actions} key={word} word={word} />\n        }\n      })\n      .filter((val) => !!val)\n\n    /*\n     *\n     * Render simple version:\n     *\n     */\n    if (!this.state.advanced) {\n      return (\n        <div className={\"ui-form-section simple\"}>\n          <div>\n            <div className={\"one\"}>\n              <b>{pos_expand(pos)}: </b>\n            </div>\n            <div className=\"two posWords\" style={{ marginBottom: 15 }}>\n              {ListOk}\n              {row.ws_sentiment === -1 && ListBad}\n            </div>\n            <div\n              className={\"three\"}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n              <FA icon={faEllipsisH} className=\"faEllipsisH\" />{\" \"}\n              <sup>\n                <b>more</b>\n              </sup>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      /*\n       *\n       * Render advanced version:\n       *\n       */\n      if (!ListOk.length && !ListBad.length && !ListProper.length && !ListUnknown.length) {\n        return null\n      }\n      return (\n        <div className={\"ui-form-section advanced\"}>\n          <p className={\"one\"}>\n            <b className=\"title\">{pos_expand(pos)}:</b>\n          </p>\n\n          <div className={\"two\"}>\n            {/*{ListShorter.length > 0 && (*/}\n            {/*  <p>*/}\n            {/*    /!*<sub>{<>&#128512;</>}: </sub>*!/*/}\n            {/*    <Hint className={\"color-accent opacity50\"}>Sorted by length:</Hint>*/}\n            {/*    <span className=\"posWords opacity50\">{ListShorter}</span>*/}\n            {/*  </p>*/}\n            {/*)}*/}\n            {ListOk.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128512;</>}: </sub>*/}\n                <Hint className={\"color-accent opacity50\"}>Ok/Good:</Hint>\n                <span className=\"posWords\">{ListOk}</span>\n              </p>\n            )}\n            {ListBad.length > 0 && (\n              <p>\n                {/*<sub>{<>&#128545;</>}: </sub>*/}\n                <Hint className={\"color-bad opacity50\"}>Negative:</Hint>\n                <span className=\"posWords\">{ListBad}</span>\n              </p>\n            )}\n            {ListProper.length > 0 && (\n              <p>\n                {/*<sub>{<>&#127963;</>}: </sub>*/}\n                <Hint className={\"color-light opacity75\"}>Proper:</Hint>\n                <span className=\"posWords\">{ListProper}</span>\n              </p>\n            )}\n            {ListUnknown.length > 0 && (\n              <p>\n                {/*<sub>{<>&#10067;</>}: </sub>*/}\n                <Hint className={\"color-light opacity75\"}>Unknown sentiment:</Hint>\n                <span className=\"posWords\">{ListUnknown}</span>\n              </p>\n            )}\n          </div>\n\n          <p\n            className={\"three\"}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n            <FA icon={faAngleUp} className=\"faAngleUp\" />\n          </p>\n        </div>\n      )\n    }\n  }\n}\n","import styled from \"styled-components\"\n\nexport const StyledResults = styled.div`\n  font-size: 1.125rem;\n  position: relative;\n  padding-top: 1.25rem;\n  padding-bottom: 1rem;\n  color: #182026;\n  min-height: 100vh;\n  background: white;\n\n  .editWordLink {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    font-size: 2rem;\n    color: var(--color-subtle);\n    z-index: 100;\n  }\n\n  .ui-form-section {\n    .one {\n    }\n    .two {\n    }\n    .three {\n      text-align: center;\n      cursor: pointer;\n      color: var(--color-subtle);\n      white-space: nowrap;\n      font-size: 1.5rem;\n      margin: 1rem auto -1.5rem;\n      width: 5rem;\n      svg {\n        transform: scale(0.85);\n        display: inline-block;\n        top: -1rem;\n        position: relative;\n        background: var(--color-warmwhite);\n        padding: 0;\n      }\n      sup {\n        position: relative;\n        top: -1.2rem;\n      }\n    }\n    &.advanced {\n    }\n    &.simple {\n      .two {\n        position: relative;\n        white-space: nowrap;\n        overflow: hidden;\n        &:after {\n          content: \"\";\n          display: block;\n          position: absolute;\n          top: -0.5rem;\n          right: 0;\n          height: 2rem;\n          width: 60px;\n          background: linear-gradient(to left, var(--color-warmwhite) 0%, transparent 100%);\n        }\n      }\n    }\n  }\n\n  .posword {\n    //padding: 0 0.5rem 0 0;\n    display: inline-block;\n    //cursor:pointer;\n    font-size: 1.125rem;\n    color: var(--color-medium);\n  }\n\n  .title {\n    font-size: 1.25rem;\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport FieldList from \"./FieldList\"\nimport Field from \"./Field\"\nimport Pos from \"./Pos\"\nimport { StyledResults } from \"./WordResults.styled\"\nimport { faEdit } from \"@fortawesome/pro-solid-svg-icons\"\nimport { FontAwesomeIcon as FA } from \"@fortawesome/react-fontawesome\"\nimport DomExt from \"../Admin/EditDomain/DomExt\"\nimport PosWord from \"./PosWord\"\nimport Search from \"../../components/Search\"\n\nexport default function (props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  /*\n   * Search\n   */\n  const SearchAndHeader = (\n    <Search\n      {...that.props}\n      domains={false}\n      title=\"Synonyms and info for...\"\n      placeholder=\"...\"\n      // cue={[\n      //   <span key=\"1\">\n      //     The most accurate thesaurus API&nbsp;\n      //     <span className=\"nowrap\">\n      //       for <>N</>atural <>L</>anguage <>P</>rocessing applications.\n      //     </span>\n      //     &nbsp;\n      //     <span key=\"3\" className=\"nowrap\">\n      //       <FA icon={faBolt} className=\"color-accent\" /> Powers our{\" \"}\n      //       <a href=\"https://besta.domains\" target=\"_blank\">\n      //         domain name generator\n      //       </a>\n      //       .\n      //     </span>\n      //   </span>\n      // ]}\n    />\n  )\n  /*\n   * Variables\n   */\n  // for content\n  let { word_input, word_chunks, api_actions } = that.props\n  if (word_input && !word_chunks[word_input]) {\n    return (\n      <>\n        {SearchAndHeader}\n        <StyledResults className=\"ViewWord content\">\n          {/*Edit*/}\n          <Link className={\"editWordLink\"} to={`/edit_word?str=${word_input}`}>\n            <FA icon={faEdit} className=\"faEdit\" style={{ transform: \"scale(0.85)\" }} />\n          </Link>\n\n          {/*Fields*/}\n          <p>Word not found</p>\n        </StyledResults>\n      </>\n    )\n  }\n  let row = word_chunks[word_input]\n  let domains = [...new Set((row.tlds || []).flat())]\n  let best_of = (row.pos_short || {}).all || []\n\n  let weird_abbreviation = false\n  if (row.abbreviation) {\n    let arr = row.abbreviation\n      .split(\",\")\n      .map((str) => str.trim())\n      .filter((str) => !!str)\n    for (let val of arr) {\n      if (val.length > row.key.length) {\n        weird_abbreviation = true\n      }\n    }\n  }\n\n  return (\n    <>\n      {SearchAndHeader}\n      <StyledResults className=\"ViewWord content\">\n        {/*Edit*/}\n        <Link className={\"editWordLink\"} to={`/edit_word?str=${row.key}`}>\n          <FA icon={faEdit} className=\"faEdit\" style={{ transform: \"scale(0.85)\" }} />\n        </Link>\n\n        {/*Key*/}\n        {/*<p className=\"color-attention-dark\">*/}\n        {/*  \"<b>{row.str || row.key}</b>\" synonyms and info:*/}\n        {/*</p>*/}\n\n        {/*\n         * Edge cases\n         */}\n        {!!weird_abbreviation && (\n          <p className=\"color-bad\">\n            <sub>\n              (* abbreviation is currently experimental. May include reverse-abbreviation - meaning the LONGER word that\n              uses THIS word as an abbreviation. This has not been proven 100% accurate, and will be taken care of in\n              the near future.)\n            </sub>\n          </p>\n        )}\n\n        {/*Fields*/}\n        <div className={\"ui-form-section ui-form-fieldset-grid\"}>\n          {[\"proper\", \"root\", \"singular\", \"plural\", \"abbreviation\", \"acronym\", \"conjunction\", \"ws_sentiment\"]\n            .filter((field) => row[field] || row[field] === 0)\n            .map((field, pi) => (\n              <Field field={field} row={row} key={row.key + pi} />\n            ))}\n\n          {/*\n           * Best Of\n           */}\n          {!!(best_of && best_of.length) && (\n            <div className=\"ui-form-fieldset\">\n              <span className=\"label\">summary:</span>\n              <span className=\"value\">\n                {best_of.map((w, i) => (\n                  <PosWord api_actions={api_actions} key={w} word={w} />\n                ))}\n              </span>\n            </div>\n          )}\n\n          {/*\n           * Domains\n           */}\n          {!!(domains && domains.length) && (\n            <div className=\"ui-form-fieldset\">\n              <span className=\"label\">domains:</span>\n              <span className=\"value\">\n                {domains.map((dom, i) => (\n                  <DomExt key={dom + i} domext={dom} />\n                ))}\n              </span>\n            </div>\n          )}\n\n          {/*\n           * Aux\n           */}\n          {!!row.aux && (\n            <div className=\"ui-form-fieldset\">\n              <span className=\"label\">bound morpheme</span>\n            </div>\n          )}\n          {/*\n           * Name\n           */}\n          {!!row.name && (\n            <div className=\"ui-form-fieldset\">\n              <span className=\"label\">is a name</span>\n            </div>\n          )}\n        </div>\n\n        {/*\n         * Lists\n         */}\n        <div className={\"ui-form-section\"}>\n          {[row.pos1, row.pos2, row.pos3, \"bef\", \"aft\", \"ety\", \"etc\"].map((pos, pi) => (\n            <Pos api_actions={api_actions} pos={pos} row={row} key={pos + pi} expand={false} />\n          ))}\n          {[\"list\"].map((field, pi) => (\n            <FieldList field={field} row={row} key={row.key + pi} />\n          ))}\n        </div>\n      </StyledResults>\n    </>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const StyledHome = styled.div`\n  font-size: 1.125rem;\n  position: relative;\n  padding-top: 2.5rem;\n  padding-bottom: 1rem;\n  color: #182026;\n  min-height: 100vh;\n  background: white;\n  section {\n    margin: 0 0 2.5rem 2px;\n    h3 {\n      margin-left: -2px;\n    }\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  b,\n  strong {\n    font-weight: 600;\n  }\n  .text {\n    padding-left: 1rem;\n    border-left: solid 4px #efefef;\n    color: #666;\n  }\n  p + .text {\n    margin-top: 0.75rem;\n  }\n`\n","import React from \"react\"\nimport Search from \"../../components/Search\"\nimport { Link } from \"gatsby\"\nimport { StyledHome } from \"./WordHome.styled\"\n\nexport default function (props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  let oxfordExample = function () {\n    let text = `[\n    [\"bright\",\"full of light\",\"well lit\",\"well lighted\", ...],\n    [\"light-coloured\",\"light-toned\",\"pale\", ...],\n    [\"easy to lift\",\"not heavy\",\"weighing very little\",\"lightweight\", ...],\n    [\"flimsy\",\"lightweight\",\"insubstantial\",\"thin\", ...]\n]`\n    return { __html: text }\n  }\n  /*\n   * Variables\n   */\n  // for content\n  let { word_input } = that.props\n  return (\n    <>\n      <Search\n        {...that.props}\n        className={!word_input ? \"Search WordHome\" : \"Search\"}\n        domains={false}\n        title=\"Find another word for...\" // // {[<div key=\"logo\">{NLPThesaurusLogo}</div>, <div key=\"title\">Another word for...</div>]}\n        placeholder=\"...\"\n        home={true}\n        cue={[\n          <div key=\"1\">Synonyms, root word, parts of speech, plurals, abbreviations, and sentiment analysis.</div>\n          // <span key=\"2\">\n          //   Built for <span className=\"nowrap\">AI applications</span>.&nbsp;\n          //   <span key=\"3\" className=\"nowrap\">\n          //     <FA icon={faBolt} className=\"color-accent\" /> Powers our{\" \"}\n          //     <a href=\"https://besta.domains\" target=\"_blank\">\n          //       domain name generator\n          //     </a>\n          //     .\n          //   </span>\n          // </span>\n        ]}\n      />\n      <StyledHome>\n        {/*<article className=\"exploreAPI\">test test</article>*/}\n        <article className=\"content\">\n          <section>\n            <h3 className=\"color-attention\">☝️ More entries than any other thesaurus. Plus sentiment-analysis!</h3>\n            <p>\n              Try <Link to=\"/word?str=aloha\">aloha</Link>, or <Link to=\"/word?str=aggregate\">aggregate</Link> or{\" \"}\n              <Link to=\"/word?str=appendectomy\">appendectomy</Link>. Or <Link to=\"/word?str=zig\">zig</Link> or{\" \"}\n              <Link to=\"/word?str=zag\">zag</Link>. Even short phrases like{\" \"}\n              <Link to=\"/word?str=water under the bridge\">water under the bridge</Link> or{\" \"}\n              <Link to=\"/word?str=in a while\">in a while</Link>.\n            </p>\n            <div className=\"text\">\n              <p>\n                <b>Parts of speech</b> (nouns, verbs, interjections, pronouns, etc.), ordered by relevance.{\" \"}\n                <b>Root word extraction.</b> Plural/singular. Abbreviations/acronyms. <b>Sentiment score</b> (-1 is\n                negative, 1 is positive, 0 is neutral). Related domain name TLDs. Etc.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h3 className=\"color-attention\">Word breaking, tokenization, lemmatization. Even without spaces!</h3>\n            <p>\n              <i>It is not easy finding an API which will extract meaning from a phrase with no spaces:</i>\n            </p>\n            <div className=\"text\">\n              <p>\n                <i>Ex1: \"</i>\n                <b>thisisanexample</b>\n                <i>\" returns </i>\n                <b>this</b> <b>is</b> <b>an</b> <b>example</b>(noun).\n              </p>\n              <p>\n                <i>Ex2: \"</i>\n                <b>atotaleclipseofthesky</b>\n                <i>\" returns </i>\n                <b>a</b> <b>total</b>(adj) <b>eclipse</b>(noun) <b>of</b> <b>the</b> <b>sky</b>(noun) +{\" \"}\n                <b>total eclipse</b>(noun)\n              </p>\n              <p>\n                <i>Ex3: \"</i>\n                <b>unitedstates</b>\n                <i>\" returns </i>\n                <b>united</b>(adj) <b>states</b>(noun) + <b>united states</b>(noun)\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h3 className=\"color-attention\">API coming soon...</h3>\n            <div className=\"text\">\n              <p>\n                For now, here's one use case... Our domain suggestions tool. It analyzes your input text (with or\n                without spaces), generates domain name phrases, and matches related TLDs. Try the app:{\" \"}\n                <a href=\"https://besta.domains\" target=\"_blank\">\n                  Besta.Domains\n                </a>\n                .\n              </p>\n            </div>\n          </section>\n\n          <p>&nbsp;</p>\n        </article>\n      </StyledHome>\n    </>\n  )\n}\n","import React from \"react\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport * as ui_actions from \"src/redux/actions/ui\"\nimport api_actions from \"src/redux/actions/api\"\nimport * as io_actions from \"src/redux/actions/io\"\nimport ViewWordResults from \"./WordResults\"\nimport ViewWordHome from \"./WordHome\"\n\nclass Word extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    props.ui_actions.RX__search_title(\"Thesaurus Search:\")\n  }\n\n  componentDidMount() {\n    /*\n     * Get word\n     */\n    this.props.io_actions.RX__search_thesaurus()\n    this.props.io_actions.RX__set_inputs({tld:''})\n  }\n\n  async componentDidUpdate(prevProps) {\n    /*\n     * Get word\n     */\n    if (this.props.search_now && this.props.search_now !== prevProps.search_now) {\n      this.props.io_actions.RX__search_thesaurus()\n    }\n  }\n\n  render() {\n    let { word_input } = this.props\n    return <>{word_input ? <ViewWordResults that={this} /> : <ViewWordHome that={this} />}</>\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    ui_actions: bindActionCreators(ui_actions, dispatch),\n    api_actions: bindActionCreators(api_actions, dispatch),\n    io_actions: bindActionCreators(io_actions, dispatch)\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    word_input: state.input.str,\n    word_chunks: state.output.chunks,\n    search_now: state.input.search_now\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Word)\n","import ViewWord from \"./Word\"\n\nexport default ViewWord\n","import React from \"react\"\nimport App from \"../components/App\"\nimport Word from \"src/containers/Word\"\nimport Footer from \"../components/Footer\"\n\nclass RootIndex extends React.Component {\n  render() {\n    return (\n      <App location={this.props.location} meta_title={'Thesaurus'}>\n        <Word location={this.props.location} />\n        <Footer />\n      </App>\n    )\n  }\n}\n\nexport default RootIndex\n","import React from \"react\"\n\nconst styles = {\n  Hint: {\n    display: \"block\",\n    lineHeight: \"1em\",\n    fontSize: \"0.67em\",\n    fontWeight: \"bold\",\n    padding: \"0\",\n    margin: \"0\"\n  }\n}\n\nexport default (props) => {\n  // validate\n  let { style = {}, className = \"\", children } = props\n  if (!children) {\n    return null\n  }\n  // display\n  return (\n    <span className={className} style={{ ...styles.Hint, ...style }}>\n      {children}\n    </span>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass DomExt extends React.Component {\n  render() {\n    if (!this.props.domext) {\n      return null\n    }\n    return (\n      <span>\n        {/*\n         * word\n         */}\n        <span className={\"posword\"}>\n          <Link\n            to={`/edit_domain?tld=${this.props.domext}`}\n            onClick={() => {\n              window.isLoading(\"render\")\n            }}\n          >\n            {this.props.domext},&nbsp;\n          </Link>\n        </span>\n      </span>\n    )\n  }\n}\n\nexport default DomExt\n","export default {\n  nou: \"nouns\",\n  ver: \"verbs\",\n  adj: \"adjectives\",\n  adv: \"adverbs\",\n  etc: \"etc\",\n  pro: \"pronouns\",\n  pre: \"prepositions\",\n  det: \"determiners\",\n  int: \"interjections\",\n  con: \"conjunctions\",\n  ety: \"etymology\",\n  bef: \"before\",\n  aft: \"after\",\n  mod: \"modal\",\n  ctr: \"contractions\",\n  ive: \"interrogative\"\n}\n","import pos_expand from '../dict/pos_expand'\n\nexport default function (str) {\n  let string = pos_expand[str]\n  return string || str\n}"],"sourceRoot":""}